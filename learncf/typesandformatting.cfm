<legend>Data Types and Formatting</legend>
<p>Last week, we read an article called <em>Introduction to Data Types</em> and used it to  create the databases in the SQL server. Those datatype concepts are very much alive and well here as well. For example, what is the difference between 123456789 and 123,456,789? To a human, nothing. To a computer, almost everything. Let's look at it. </p>
<p>123456789 is a <strong>number</strong>. 123,456,789 is a <strong>string</strong>. Remember that numbers can ONLY have numerals, a decimal point and perhaps a positive or negative sign (depending on if it's an integer, a float, signed or unsigned). </p>
<p>There are some computer programs that are very strictly typed. That means that whenever you are talking about number, dates, or other data types, you need to specifically say that THIS IS AN NUMBER. THIS IS A DATE. ColdFusion, however, has both a reputation and culture of trying to do things in an elegantly simple way. It really does try to make things as straightforward as possible (one of the reasons I love it). Therefore, you don't need to announce to your application that you are now dealing with a number, the program gives it its best guess and, for the most part, it does pretty well. However, even if you don't SAY what type of data it is, the program still has to treat your information as if it is a particular datatype. Therefore, if you try to add two numbers #5+3#, you will get 8. If you try to add a string and a number you will get something else. See:</p>
<ul>
  <li>#5+3# = <cfoutput>#5+3#</cfoutput></li>
    <li>#fish + 3# = <cfoutput><cftry>#fish + 3#<cfcatch type="any">#cfcatch.message#</cfcatch></cftry></cfoutput></li>
</ul>
<p>In this case, it's trying to treat the word &quot;fish&quot; as a variable and, since we haven't covered those yet, we'll gloss over that. SOOOOO, does that mean that we are forever, forced to look at numbers like 6234798723847932 with no commas, dollar signs or any other human readable features? Of course it doesn't. This  brings up the concept of <strong>formatters</strong>. There is, or can be, a difference between the underlying type of data and how it is presented on the screen. CF (and other languages) does this with what are called &quot;formatters&quot;. CF has several. We're going to look at two of them.</p>
<p><strong>Number Formatters</strong> - Let's look at our example: 123456789. A nine digit, hard for humans to read, number. With a Number formatter we can specifiy that this number should have commas and, just for fun, a dollar sign. We can do that like this: #Numberformat(123456789,&quot;$,&quot;)# and we get 
  <cfoutput>#Numberformat(123456789,"$,")#</cfoutput>. We told the formatter to put in a $ and a , in the default places and it did. The second part of this is called a "Mask". The point here isn't that you need to learn the exact syntax for the NumberFormat Mask since it's in the CF Documentation here: <a href="https://wikidocs.adobe.com/wiki/display/coldfusionen/NumberFormat" target="_blank">https://wikidocs.adobe.com/wiki/display/coldfusionen/NumberFormat</a> but that you know the concept. </p>
<p><strong>Date Formatters</strong> - Dates are another of those things that are inherently human readable. What does a date look like to the computer? Like this: <cfoutput>#now()#</cfoutput>
  . That particular format is called a <strong>TimeStamp</strong>. You can read it and once you get past the {} and the quotes you can see the date and the time in 24hr format including the hours, minutes and seconds. So how do you get the date to appear on the screen? This is done by calling a ColdFusion <strong>function</strong>. A function is a list of instructions that you can give to a computer or programming language to perform. Most functions,at least in CF, have names and can be reference simply by calling its name. In this case we are going to look at a common function to get the current date and time as a date and is called now(). It's very difficult so pay attention: To make it work you type #now()#. Whew! Complex, right! Of course it needs to be inside a &lt;cfoutput&gt; tag but you already knew that ;) Whenever you see &quot;()&quot; it almost always means that there is a function being called. The parentheses are important for reasons we will look at later
  . </p>
<p><strong>Exercise</strong>: There is a folder in your site called &quot;LearnCF&quot; which, in turn, has a folder called &quot;exercises&quot;. Make a new web page called &quot;MyDate.cfm&quot; in that &quot;exercises&quot; folder. In the body tag, add &lt;cfoutput&gt;#now()#&lt;/cfoutput&gt;. Upload it to the server and open it. You should see the current date and time as a time stamp. </p>
<p>However, it's usually not a good idea to make your audience work very hard for seemingly simple things like the time. Therefore let's look at the Date Formatter: The syntax is very similar to the Number Formatter in that is it looks like this: DateFormat(Date,&quot;<em>mask</em>&quot;). The trick is to then know what goes into making the mask. The documentation at <a href="https://wikidocs.adobe.com/wiki/display/coldfusionen/DateFormat" target="_blank">https://wikidocs.adobe.com/wiki/display/coldfusionen/DateFormat</a> has a list of the elements of a mask. For example, to make the common date notation for the US, you would type #dateformat(now(),&quot;mm/dd/yyyy&quot;)# and it appears like this: <cfoutput>#dateformat(now(),"m/dd/yyyy")#</cfoutput></p>
<p><strong>Exercise</strong>: Open up your MyDate.cfm page again. On the next 10 lines, use different masks to make the date appear differently. If you are very adventurous, try using the  LSDateFormat function to make the date appear in date formats from around the world (label them as you do them, please). The documentation for LSDateFormat is here: <a href="https://wikidocs.adobe.com/wiki/display/coldfusionen/LSDateFormat" target="_blank">https://wikidocs.adobe.com/wiki/display/coldfusionen/LSDateFormat</a></p>
<p>Here is a list of supported locales which is the third part of the LSDateFormat. Give it a shot. Can you figure out that the codes mean in lines 30 - 185? Hint: The first two countries have to do with a script.</p>
<cfoutput>
<ol>
	<cfloop list="#Server.Coldfusion.SupportedLocales#" index="i">
    	<li>#i# - #LSDateformat(now(),'short',i)#</li>
    </cfloop>
</ol>
</cfoutput>

